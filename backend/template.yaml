# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
    sam-app

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
    - AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
    # This is a Lambda function config associated with the source code: create-user.ts
    createUserFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            CodeUri: app/
            Handler: dist/src/handlers/create-user.handler
            Runtime: nodejs12.x
            Architectures:
                - x86_64
            MemorySize: 128
            Timeout: 100
            Description: Function that creates a user.
            Policies:
                # Give Create/Read/Update/Delete Permissions to the SampleTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref Users
            Environment:
                Variables:
                    # Make table name accessible as environment variable from function code during execution
                    USER_TABLE: !Ref Users
            Events:
                Api:
                    Type: Api
                    Properties:
                        Path: /create-user
                        Method: POST

    loginUserFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            CodeUri: app/
            Handler: dist/src/handlers/login-user.handler
            Runtime: nodejs12.x
            Architectures:
                - x86_64
            MemorySize: 128
            Timeout: 100
            Description: Function that logs the user in.
            Policies:
                # Give Create/Read/Update/Delete Permissions to the SampleTable
                - DynamoDBCrudPolicy:
                      TableName: !Ref Users
            Environment:
                Variables:
                    # Make table name accessible as environment variable from function code during execution
                    USER_TABLE: !Ref Users
                    JWT_SECRET: 60678016E0DC0B50727132AD18A91313B457731B9C819151FEED02B78C70CFE2
            Events:
                Api:
                    Type: Api
                    Properties:
                        Path: /login-user
                        Method: POST

    placeGuessFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            CodeUri: app/
            Handler: dist/src/handlers/place-guess.handler
            Runtime: nodejs12.x
            Architectures:
                - x86_64
            MemorySize: 128
            Timeout: 100
            Description: Function that lets the user make a guess.
            Policies:
                - AmazonDynamoDBFullAccess
                - DynamoDBCrudPolicy:
                      TableName: !Ref Users
                      TableName: !Ref Guesses
            Environment:
                Variables:
                    # Make table name accessible as environment variable from function code during execution
                    USER_TABLE: !Ref Users
                    GUESS_TABLE: !Ref Guesses
                    JWT_SECRET: 60678016E0DC0B50727132AD18A91313B457731B9C819151FEED02B78C70CFE2
            Events:
                Api:
                    Type: Api
                    Properties:
                        Path: /place-guess
                        Method: POST
        
    evaluateGuessFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            CodeUri: app/
            Handler: dist/src/handlers/place-guess.handler
            Runtime: nodejs12.x
            Architectures:
                - x86_64
            MemorySize: 128
            Timeout: 100
            Description: Function that lets the user make a guess.
            Policies:
                - AmazonDynamoDBFullAccess
                - DynamoDBCrudPolicy:
                      TableName: !Ref Users
                      TableName: !Ref Guesses
            Environment:
                Variables:
                    # Make table name accessible as environment variable from function code during execution
                    USER_TABLE: !Ref Users
                    GUESS_TABLE: !Ref Guesses
            Events:
                Api:
                    Type: Api
                    Properties:
                        Path: /evaluate-guess
                        Method: POST
                        
    # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
    # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable

    Users:
        Type: AWS::Serverless::SimpleTable
        Properties:
            PrimaryKey:
                Name: username
                Type: String
            ProvisionedThroughput:
                ReadCapacityUnits: 2
                WriteCapacityUnits: 2

    Guesses:
        Type: AWS::Serverless::SimpleTable
        Properties:
            PrimaryKey:
                Name: id
                Type: String
            ProvisionedThroughput:
                ReadCapacityUnits: 2
                WriteCapacityUnits: 2

Outputs:
    WebEndpoint:
        Description: "API Gateway endpoint URL for Prod stage"
        Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
