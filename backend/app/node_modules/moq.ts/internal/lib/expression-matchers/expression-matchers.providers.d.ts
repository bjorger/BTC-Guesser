import { SetPropertyExpressionMatcher } from "./set-property.matcher";
import { ConstantMatcher } from "./constant.matcher";
import { NamedMethodExpressionMatcher } from "./instance-method.matcher";
import { ArgumentsMatcher } from "./arguments.matcher";
import { MethodExpressionMatcher } from "./method.matcher";
import { InOperatorMatcher } from "./in-operator.matcher";
import { ExpressionMatcher } from "./expression.matcher";
/**
 * @hidden
 */
export declare const expressionMatchersProviders: ({
    provide: typeof ExpressionMatcher;
    useClass: typeof ExpressionMatcher;
    deps: (typeof SetPropertyExpressionMatcher | typeof NamedMethodExpressionMatcher | typeof MethodExpressionMatcher | typeof InOperatorMatcher)[];
} | {
    provide: typeof SetPropertyExpressionMatcher;
    useClass: typeof SetPropertyExpressionMatcher;
    deps: (typeof ConstantMatcher)[];
} | {
    provide: typeof NamedMethodExpressionMatcher;
    useClass: typeof NamedMethodExpressionMatcher;
    deps: (typeof ArgumentsMatcher)[];
} | {
    provide: typeof MethodExpressionMatcher;
    useClass: typeof MethodExpressionMatcher;
    deps: (typeof ArgumentsMatcher)[];
} | {
    provide: typeof InOperatorMatcher;
    useClass: typeof InOperatorMatcher;
    deps: any[];
} | {
    provide: typeof ArgumentsMatcher;
    useClass: typeof ArgumentsMatcher;
    deps: (typeof ConstantMatcher)[];
})[];
