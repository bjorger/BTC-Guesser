export declare abstract class Interaction {
    readonly name: PropertyKey;
    readonly args: any[];
    protected constructor(name: PropertyKey, args: any[]);
}
/**
 * This class represents an invocation of a named function.
 * It provides access to the name of function and list of parameters.
 */
export declare class NamedMethodInteraction extends Interaction {
    constructor(name: PropertyKey, args: any[]);
}
/**
 * This class represents an invocation of a function.
 * It provides access to the list of parameters.
 */
export declare class MethodInteraction extends Interaction {
    constructor(args: any[]);
}
/**
 * This class represents a property accessing.
 * It provides access to the name of property.
 */
export declare class GetPropertyInteraction extends Interaction {
    constructor(name: PropertyKey);
}
/**
 * This class represents a property write interaction.
 * It provides access to the name of property and the value.
 */
export declare class SetPropertyInteraction extends Interaction {
    readonly value: any;
    constructor(name: PropertyKey, value: any);
}
/**
 * This class represents applying of [in operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in).
 * It provides access to the name of property.
 */
export declare class InOperatorInteraction extends Interaction {
    constructor(name: PropertyKey);
}
