import { ConstantMatcher } from "../expression-matchers/constant.matcher";
/**
 * Matches objects that support Iterable protocol
 */
export class IteratorMatcher {
    constructor(injector, iterableTester) {
        this.injector = injector;
        this.iterableTester = iterableTester;
    }
    /*eslint-disable-next-line @typescript-eslint/ban-types*/
    matched(left, right) {
        if (this.iterableTester.verify(left, right) === true) {
            const leftIterator = [...left[Symbol.iterator]()];
            const rightIterator = [...right[Symbol.iterator]()];
            if (leftIterator.length !== rightIterator.length)
                return false;
            const constantMatcher = this.injector.get(ConstantMatcher);
            for (let i = 0; i < leftIterator.length; i++) {
                const leftValue = leftIterator[i];
                const rightValue = rightIterator[i];
                if (constantMatcher.matched(leftValue, rightValue) === false) {
                    return false;
                }
            }
            return true;
        }
        return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlcmF0b3IubWF0Y2hlci5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjLyIsInNvdXJjZXMiOlsibGliL2VxdWFsLW1hdGNoZXJzL2l0ZXJhdG9yLm1hdGNoZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBSTFFOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGVBQWU7SUFFeEIsWUFDWSxRQUFrQixFQUNsQixjQUE4QjtRQUQ5QixhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtJQUMxQyxDQUFDO0lBRUQseURBQXlEO0lBQ2xELE9BQU8sQ0FBbUIsSUFBTyxFQUFFLEtBQVE7UUFDOUMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQ2xELE1BQU0sWUFBWSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNsRCxNQUFNLGFBQWEsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDcEQsSUFBSSxZQUFZLENBQUMsTUFBTSxLQUFLLGFBQWEsQ0FBQyxNQUFNO2dCQUFFLE9BQU8sS0FBSyxDQUFDO1lBRS9ELE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzNELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMxQyxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2xDLE1BQU0sVUFBVSxHQUFHLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEMsSUFBSSxlQUFlLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsS0FBSyxLQUFLLEVBQUU7b0JBQzFELE9BQU8sS0FBSyxDQUFDO2lCQUNoQjthQUNKO1lBRUQsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ3JCLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlVGVzdGVyIH0gZnJvbSBcIi4vaXRlcmFibGUudGVzdGVyXCI7XG5pbXBvcnQgeyBDb25zdGFudE1hdGNoZXIgfSBmcm9tIFwiLi4vZXhwcmVzc2lvbi1tYXRjaGVycy9jb25zdGFudC5tYXRjaGVyXCI7XG5pbXBvcnQgeyBJT2JqZWN0TWF0Y2hlciB9IGZyb20gXCIuL29iamVjdC1tYXRjaGVyLnR5cGVcIjtcbmltcG9ydCB7IEluamVjdG9yIH0gZnJvbSBcIi4uL3N0YXRpYy5pbmplY3Rvci9pbmplY3RvclwiO1xuXG4vKipcbiAqIE1hdGNoZXMgb2JqZWN0cyB0aGF0IHN1cHBvcnQgSXRlcmFibGUgcHJvdG9jb2xcbiAqL1xuZXhwb3J0IGNsYXNzIEl0ZXJhdG9yTWF0Y2hlciBpbXBsZW1lbnRzIElPYmplY3RNYXRjaGVyIHtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcbiAgICAgICAgcHJpdmF0ZSBpdGVyYWJsZVRlc3RlcjogSXRlcmFibGVUZXN0ZXIpIHtcbiAgICB9XG5cbiAgICAvKmVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXR5cGVzKi9cbiAgICBwdWJsaWMgbWF0Y2hlZDxUIGV4dGVuZHMgb2JqZWN0PihsZWZ0OiBULCByaWdodDogVCk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodGhpcy5pdGVyYWJsZVRlc3Rlci52ZXJpZnkobGVmdCwgcmlnaHQpID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zdCBsZWZ0SXRlcmF0b3IgPSBbLi4ubGVmdFtTeW1ib2wuaXRlcmF0b3JdKCldO1xuICAgICAgICAgICAgY29uc3QgcmlnaHRJdGVyYXRvciA9IFsuLi5yaWdodFtTeW1ib2wuaXRlcmF0b3JdKCldO1xuICAgICAgICAgICAgaWYgKGxlZnRJdGVyYXRvci5sZW5ndGggIT09IHJpZ2h0SXRlcmF0b3IubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgICAgIGNvbnN0IGNvbnN0YW50TWF0Y2hlciA9IHRoaXMuaW5qZWN0b3IuZ2V0KENvbnN0YW50TWF0Y2hlcik7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlZnRJdGVyYXRvci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGxlZnRWYWx1ZSA9IGxlZnRJdGVyYXRvcltpXTtcbiAgICAgICAgICAgICAgICBjb25zdCByaWdodFZhbHVlID0gcmlnaHRJdGVyYXRvcltpXTtcbiAgICAgICAgICAgICAgICBpZiAoY29uc3RhbnRNYXRjaGVyLm1hdGNoZWQobGVmdFZhbHVlLCByaWdodFZhbHVlKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cblxuIl19