import { ReturnsPreset } from "../presets/presets/returns.preset";
import { CallbacksPreset } from "../presets/presets/callbacks.preset";
import { ThrowsPreset } from "../presets/presets/throws.preset";
import { MimicsPreset } from "../presets/presets/mimics.preset";
/**
 * @hidden
 */
export class PresetPlayer {
    constructor(callbackPresetPlayer, mimicsPresetPlayer) {
        this.callbackPresetPlayer = callbackPresetPlayer;
        this.mimicsPresetPlayer = mimicsPresetPlayer;
    }
    play(preset, interaction) {
        if (preset instanceof ReturnsPreset) {
            return preset.value;
        }
        if (preset instanceof CallbacksPreset) {
            return this.callbackPresetPlayer.play(preset.callback, interaction);
        }
        if (preset instanceof MimicsPreset) {
            return this.mimicsPresetPlayer.play(preset.origin, interaction);
        }
        if (preset instanceof ThrowsPreset) {
            throw preset.exception;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlc2V0LnBsYXllci5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9wcm9qZWN0cy9tb3Evc3JjLyIsInNvdXJjZXMiOlsibGliL2ludGVyYWN0aW9uLXBsYXllcnMvcHJlc2V0LnBsYXllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFbEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUVoRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFFaEU7O0dBRUc7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQUNyQixZQUNZLG9CQUEwQyxFQUMxQyxrQkFBc0M7UUFEdEMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQUMxQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO0lBRWxELENBQUM7SUFFTSxJQUFJLENBQUksTUFBa0IsRUFBRSxXQUF3QjtRQUN2RCxJQUFJLE1BQU0sWUFBWSxhQUFhLEVBQUU7WUFDakMsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO1NBQ3ZCO1FBQ0QsSUFBSSxNQUFNLFlBQVksZUFBZSxFQUFFO1lBQ25DLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQ3ZFO1FBQ0QsSUFBSSxNQUFNLFlBQVksWUFBWSxFQUFFO1lBQ2hDLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQ25FO1FBQ0QsSUFBSSxNQUFNLFlBQVksWUFBWSxFQUFFO1lBQ2hDLE1BQU0sTUFBTSxDQUFDLFNBQVMsQ0FBQztTQUMxQjtJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElQcmVzZXQgfSBmcm9tIFwiLi4vcHJlc2V0cy9wcmVzZXRzL3ByZXNldFwiO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb24gfSBmcm9tIFwiLi4vaW50ZXJhY3Rpb25zXCI7XG5pbXBvcnQgeyBSZXR1cm5zUHJlc2V0IH0gZnJvbSBcIi4uL3ByZXNldHMvcHJlc2V0cy9yZXR1cm5zLnByZXNldFwiO1xuaW1wb3J0IHsgQ2FsbGJhY2tQcmVzZXRQbGF5ZXIgfSBmcm9tIFwiLi9jYWxsYmFjay1wcmVzZXQucGxheWVyXCI7XG5pbXBvcnQgeyBDYWxsYmFja3NQcmVzZXQgfSBmcm9tIFwiLi4vcHJlc2V0cy9wcmVzZXRzL2NhbGxiYWNrcy5wcmVzZXRcIjtcbmltcG9ydCB7IFRocm93c1ByZXNldCB9IGZyb20gXCIuLi9wcmVzZXRzL3ByZXNldHMvdGhyb3dzLnByZXNldFwiO1xuaW1wb3J0IHsgTWltaWNzUHJlc2V0UGxheWVyIH0gZnJvbSBcIi4vbWltaWNzLXByZXNldC5wbGF5ZXJcIjtcbmltcG9ydCB7IE1pbWljc1ByZXNldCB9IGZyb20gXCIuLi9wcmVzZXRzL3ByZXNldHMvbWltaWNzLnByZXNldFwiO1xuXG4vKipcbiAqIEBoaWRkZW5cbiAqL1xuZXhwb3J0IGNsYXNzIFByZXNldFBsYXllciB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgY2FsbGJhY2tQcmVzZXRQbGF5ZXI6IENhbGxiYWNrUHJlc2V0UGxheWVyLFxuICAgICAgICBwcml2YXRlIG1pbWljc1ByZXNldFBsYXllcjogTWltaWNzUHJlc2V0UGxheWVyKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgcGxheTxUPihwcmVzZXQ6IElQcmVzZXQ8VD4sIGludGVyYWN0aW9uOiBJbnRlcmFjdGlvbik6IGFueSB7XG4gICAgICAgIGlmIChwcmVzZXQgaW5zdGFuY2VvZiBSZXR1cm5zUHJlc2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gcHJlc2V0LnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmVzZXQgaW5zdGFuY2VvZiBDYWxsYmFja3NQcmVzZXQpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNhbGxiYWNrUHJlc2V0UGxheWVyLnBsYXkocHJlc2V0LmNhbGxiYWNrLCBpbnRlcmFjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByZXNldCBpbnN0YW5jZW9mIE1pbWljc1ByZXNldCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubWltaWNzUHJlc2V0UGxheWVyLnBsYXkocHJlc2V0Lm9yaWdpbiwgaW50ZXJhY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcmVzZXQgaW5zdGFuY2VvZiBUaHJvd3NQcmVzZXQpIHtcbiAgICAgICAgICAgIHRocm93IHByZXNldC5leGNlcHRpb247XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=