/*eslint-disable max-classes-per-file*/
export class Interaction {
    constructor(name, args) {
        this.name = name;
        this.args = args;
    }
}
/**
 * This class represents an invocation of a named function.
 * It provides access to the name of function and list of parameters.
 */
export class NamedMethodInteraction extends Interaction {
    constructor(name, args) {
        super(name, args);
    }
}
/**
 * This class represents an invocation of a function.
 * It provides access to the list of parameters.
 */
export class MethodInteraction extends Interaction {
    constructor(args) {
        super(undefined, args);
    }
}
/**
 * This class represents a property accessing.
 * It provides access to the name of property.
 */
export class GetPropertyInteraction extends Interaction {
    constructor(name) {
        super(name, undefined);
    }
}
/**
 * This class represents a property write interaction.
 * It provides access to the name of property and the value.
 */
export class SetPropertyInteraction extends Interaction {
    constructor(name, value) {
        super(name, [value]);
        this.value = value;
    }
}
/**
 * This class represents applying of [in operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in).
 * It provides access to the name of property.
 */
export class InOperatorInteraction extends Interaction {
    constructor(name) {
        super(name, undefined);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJhY3Rpb25zLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21vcS9zcmMvIiwic291cmNlcyI6WyJsaWIvaW50ZXJhY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVDQUF1QztBQUN2QyxNQUFNLE9BQWdCLFdBQVc7SUFDN0IsWUFDb0IsSUFBaUIsRUFDakIsSUFBVztRQURYLFNBQUksR0FBSixJQUFJLENBQWE7UUFDakIsU0FBSSxHQUFKLElBQUksQ0FBTztJQUUvQixDQUFDO0NBQ0o7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsV0FBVztJQUNuRCxZQUFZLElBQWlCLEVBQ2pCLElBQVc7UUFDbkIsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN0QixDQUFDO0NBQ0o7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsV0FBVztJQUM5QyxZQUFZLElBQVc7UUFDbkIsS0FBSyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDO0NBQ0o7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsV0FBVztJQUNuRCxZQUFZLElBQWlCO1FBQ3pCLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDM0IsQ0FBQztDQUNKO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLHNCQUF1QixTQUFRLFdBQVc7SUFDbkQsWUFBWSxJQUFpQixFQUNELEtBQVU7UUFDbEMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFERyxVQUFLLEdBQUwsS0FBSyxDQUFLO0lBRXRDLENBQUM7Q0FDSjtBQUVEOzs7R0FHRztBQUNILE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxXQUFXO0lBQ2xELFlBQVksSUFBaUI7UUFDekIsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUMzQixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKmVzbGludC1kaXNhYmxlIG1heC1jbGFzc2VzLXBlci1maWxlKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBJbnRlcmFjdGlvbiB7XG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgcmVhZG9ubHkgbmFtZTogUHJvcGVydHlLZXksXG4gICAgICAgIHB1YmxpYyByZWFkb25seSBhcmdzOiBhbnlbXSkge1xuXG4gICAgfVxufVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhbiBpbnZvY2F0aW9uIG9mIGEgbmFtZWQgZnVuY3Rpb24uXG4gKiBJdCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIG5hbWUgb2YgZnVuY3Rpb24gYW5kIGxpc3Qgb2YgcGFyYW1ldGVycy5cbiAqL1xuZXhwb3J0IGNsYXNzIE5hbWVkTWV0aG9kSW50ZXJhY3Rpb24gZXh0ZW5kcyBJbnRlcmFjdGlvbiB7XG4gICAgY29uc3RydWN0b3IobmFtZTogUHJvcGVydHlLZXksXG4gICAgICAgICAgICAgICAgYXJnczogYW55W10pIHtcbiAgICAgICAgc3VwZXIobmFtZSwgYXJncyk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhbiBpbnZvY2F0aW9uIG9mIGEgZnVuY3Rpb24uXG4gKiBJdCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIGxpc3Qgb2YgcGFyYW1ldGVycy5cbiAqL1xuZXhwb3J0IGNsYXNzIE1ldGhvZEludGVyYWN0aW9uIGV4dGVuZHMgSW50ZXJhY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKGFyZ3M6IGFueVtdKSB7XG4gICAgICAgIHN1cGVyKHVuZGVmaW5lZCwgYXJncyk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhIHByb3BlcnR5IGFjY2Vzc2luZy5cbiAqIEl0IHByb3ZpZGVzIGFjY2VzcyB0byB0aGUgbmFtZSBvZiBwcm9wZXJ0eS5cbiAqL1xuZXhwb3J0IGNsYXNzIEdldFByb3BlcnR5SW50ZXJhY3Rpb24gZXh0ZW5kcyBJbnRlcmFjdGlvbiB7XG4gICAgY29uc3RydWN0b3IobmFtZTogUHJvcGVydHlLZXkpIHtcbiAgICAgICAgc3VwZXIobmFtZSwgdW5kZWZpbmVkKTtcbiAgICB9XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyByZXByZXNlbnRzIGEgcHJvcGVydHkgd3JpdGUgaW50ZXJhY3Rpb24uXG4gKiBJdCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIG5hbWUgb2YgcHJvcGVydHkgYW5kIHRoZSB2YWx1ZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNldFByb3BlcnR5SW50ZXJhY3Rpb24gZXh0ZW5kcyBJbnRlcmFjdGlvbiB7XG4gICAgY29uc3RydWN0b3IobmFtZTogUHJvcGVydHlLZXksXG4gICAgICAgICAgICAgICAgcHVibGljIHJlYWRvbmx5IHZhbHVlOiBhbnkpIHtcbiAgICAgICAgc3VwZXIobmFtZSwgW3ZhbHVlXSk7XG4gICAgfVxufVxuXG4vKipcbiAqIFRoaXMgY2xhc3MgcmVwcmVzZW50cyBhcHBseWluZyBvZiBbaW4gb3BlcmF0b3JdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL09wZXJhdG9ycy9pbikuXG4gKiBJdCBwcm92aWRlcyBhY2Nlc3MgdG8gdGhlIG5hbWUgb2YgcHJvcGVydHkuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbk9wZXJhdG9ySW50ZXJhY3Rpb24gZXh0ZW5kcyBJbnRlcmFjdGlvbiB7XG4gICAgY29uc3RydWN0b3IobmFtZTogUHJvcGVydHlLZXkpIHtcbiAgICAgICAgc3VwZXIobmFtZSwgdW5kZWZpbmVkKTtcbiAgICB9XG59XG4iXX0=