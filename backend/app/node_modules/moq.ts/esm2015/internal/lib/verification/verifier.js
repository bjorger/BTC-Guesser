import { VerifyError } from "./verify-error";
/**
 * @hidden
 */
export class Verifier {
    constructor(reflector, callCounter, verifyFormatter) {
        this.reflector = reflector;
        this.callCounter = callCounter;
        this.verifyFormatter = verifyFormatter;
    }
    test(expected, times, expressions, mockName) {
        const expression = this.reflector.reflect(expected);
        const callCount = this.callCounter.count(expression, expressions);
        const passed = times.test(callCount);
        if (passed === false) {
            const message = this.verifyFormatter.format(expression, times.message, callCount, expressions, mockName);
            throw new VerifyError(message);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyaWZpZXIuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbW9xL3NyYy8iLCJzb3VyY2VzIjpbImxpYi92ZXJpZmljYXRpb24vdmVyaWZpZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFFBQVE7SUFFakIsWUFDWSxTQUFzQyxFQUN0QyxXQUF3QixFQUN4QixlQUFnQztRQUZoQyxjQUFTLEdBQVQsU0FBUyxDQUE2QjtRQUN0QyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUN4QixvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7SUFFNUMsQ0FBQztJQUVNLElBQUksQ0FBQyxRQUFnQyxFQUFFLEtBQVksRUFBRSxXQUEwQixFQUFFLFFBQWlCO1FBQ3JHLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNsRSxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3JDLElBQUksTUFBTSxLQUFLLEtBQUssRUFBRTtZQUNsQixNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBQ3pHLE1BQU0sSUFBSSxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDbEM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaW1lcyB9IGZyb20gXCIuLi90aW1lc1wiO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb24gfSBmcm9tIFwiLi4vaW50ZXJhY3Rpb25zXCI7XG5pbXBvcnQge1xuICAgIEV4cGVjdGVkRXhwcmVzc2lvblJlZmxlY3RvcixcbiAgICBJRXhwZWN0ZWRFeHByZXNzaW9uXG59IGZyb20gXCIuLi9leHBlY3RlZC1leHByZXNzaW9ucy9leHBlY3RlZC1leHByZXNzaW9uLXJlZmxlY3RvclwiO1xuaW1wb3J0IHsgQ2FsbENvdW50ZXIgfSBmcm9tIFwiLi9jYWxsLWNvdW50ZXJcIjtcbmltcG9ydCB7IFZlcmlmeUZvcm1hdHRlciB9IGZyb20gXCIuLi9mb3JtYXR0ZXJzL3ZlcmlmeS1mb3JtYXR0ZXJcIjtcbmltcG9ydCB7IFZlcmlmeUVycm9yIH0gZnJvbSBcIi4vdmVyaWZ5LWVycm9yXCI7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgY2xhc3MgVmVyaWZpZXI8VD4ge1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcmVmbGVjdG9yOiBFeHBlY3RlZEV4cHJlc3Npb25SZWZsZWN0b3IsXG4gICAgICAgIHByaXZhdGUgY2FsbENvdW50ZXI6IENhbGxDb3VudGVyLFxuICAgICAgICBwcml2YXRlIHZlcmlmeUZvcm1hdHRlcjogVmVyaWZ5Rm9ybWF0dGVyKSB7XG5cbiAgICB9XG5cbiAgICBwdWJsaWMgdGVzdChleHBlY3RlZDogSUV4cGVjdGVkRXhwcmVzc2lvbjxUPiwgdGltZXM6IFRpbWVzLCBleHByZXNzaW9uczogSW50ZXJhY3Rpb25bXSwgbW9ja05hbWU/OiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgZXhwcmVzc2lvbiA9IHRoaXMucmVmbGVjdG9yLnJlZmxlY3QoZXhwZWN0ZWQpO1xuICAgICAgICBjb25zdCBjYWxsQ291bnQgPSB0aGlzLmNhbGxDb3VudGVyLmNvdW50KGV4cHJlc3Npb24sIGV4cHJlc3Npb25zKTtcbiAgICAgICAgY29uc3QgcGFzc2VkID0gdGltZXMudGVzdChjYWxsQ291bnQpO1xuICAgICAgICBpZiAocGFzc2VkID09PSBmYWxzZSkge1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMudmVyaWZ5Rm9ybWF0dGVyLmZvcm1hdChleHByZXNzaW9uLCB0aW1lcy5tZXNzYWdlLCBjYWxsQ291bnQsIGV4cHJlc3Npb25zLCBtb2NrTmFtZSk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVmVyaWZ5RXJyb3IobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=