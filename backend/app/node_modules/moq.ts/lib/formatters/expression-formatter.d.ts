import { Interaction } from "../interactions";
import { It } from "../expected-expressions/expression-predicates";
import { GetPropertyExpressionFormatter } from "./get.property-formatter";
import { SetPropertyExpressionFormatter } from "./set.property-formatter";
import { MethodExpressionFormatter } from "./method-formatter";
import { NamedMethodExpressionFormatter } from "./named.method-formatter";
import { ConstantFormatter } from "./constant-formatter";
import { InOperatorFormatter } from "./in-operator.formatter";
/**
 * @hidden
 */
export declare class ExpressionFormatter {
    private getPropertyFormatter;
    private setPropertyFormatter;
    private methodFormatter;
    private namedMethodFormatter;
    private constantFormatter;
    private inOperatorFormatter;
    constructor(getPropertyFormatter: GetPropertyExpressionFormatter, setPropertyFormatter: SetPropertyExpressionFormatter, methodFormatter: MethodExpressionFormatter, namedMethodFormatter: NamedMethodExpressionFormatter, constantFormatter: ConstantFormatter, inOperatorFormatter: InOperatorFormatter);
    format(expression: Interaction | It<any>): string;
}
